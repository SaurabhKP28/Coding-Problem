Rotate Array -2

Task Points: 250

Points Awarded: 250/250

Test Cases passed: 8/8

Task Status:
Reviewed

Topic

Data Structure and Algo
Task details

Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.



Try to Solve in time Complexity 0(n) with extra Space.

 

Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3

Output: [5,6,7,1,2,3,4]

Explanation:

rotate 1 steps to the right: [7,1,2,3,4,5,6]

rotate 2 steps to the right: [6,7,1,2,3,4,5]

rotate 3 steps to the right: [5,6,7,1,2,3,4]





Example 2:

Input: nums = [-1,-100,3,99], k = 2

Output: [3,99,-1,-100]

Explanation:

rotate 1 steps to the right: [99,-1,-100,3]

rotate 2 steps to the right: [3,99,-1,-100]



Example 3:

Input: nums = [1,2,3,4,5,6,7], k = 10

Output: [5,6,7,1,2,3,4]

Explanation:

rotation by 7 times gives us the same array.

rotate 1 steps to the right: [7,1,2,3,4,5,6]

rotate 2 steps to the right: [6,7,1,2,3,4,5]

rotate 3 steps to the right: [5,6,7,1,2,3,4]

====================================================================================================================================================================================================================
====================================================================================================================================================================================================================
Solution
====================================================================================================================================================================================================================

class Solution {
    public int[] rotate(int[] nums, int k) {
        int n = nums.length;
        // If k is larger than n, reduce it to k % n
        k = k % n;
        int[] temp = new int[n];
        for (int i = 0; i < n; i++) {
            temp[(i + k) % n] = nums[i];
        }
        
         System.arraycopy(temp, 0, nums, 0, n);
         return nums;
    }
}
