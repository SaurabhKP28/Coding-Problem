First non-repeating character in a stream of characters
Programming
Stacks And Queues
medium
34.8% Success
445
35
Bookmark
Asked In:
Problem Description

Given a string A denoting a stream of lowercase alphabets. You have to make new string B.

B is formed such that we have to find first non-repeating character each time a character is inserted to the stream and append it at the end to B. If no non-repeating character is found then append '#' at the end of B.



Problem Constraints
1 <= length of the string <= 100000



Input Format
The only argument given is string A.



Output Format
Return a string B after processing the stream of lowercase alphabets A.



Example Input
Input 1:

 A = "abadbc"
Input 2:

 A = "abcabc"


Example Output
Output 1:

 "aabbdd"
Output 2:

 "aaabc#"


Example Explanation
Explanation 1:

    "a"      -   first non repeating character 'a'
    "ab"     -   first non repeating character 'a'
    "aba"    -   first non repeating character 'b'
    "abad"   -   first non repeating character 'b'
    "abadb"  -   first non repeating character 'd'
    "abadbc" -   first non repeating character 'd'
Explanation 2:

    "a"      -   first non repeating character 'a'
    "ab"     -   first non repeating character 'a'
    "abc"    -   first non repeating character 'a'
    "abca"   -   first non repeating character 'b'
    "abcab"  -   first non repeating character 'c'
    "abcabc" -   no non repeating character so '#'
********************************************************************************************************************************************************************************************************************
********************************************************************************************************************************************************************************************************************

Solution
********************************************************************************************************************************************************************************************************************
class Solution {
    public String solve(String A) {
        Queue<Character> queue = new LinkedList<>();
        // Map to store the frequency of characters
        int[] freq = new int[26];
        
        // StringBuilder to build the result
        StringBuilder result = new StringBuilder();
        
        for (char c : A.toCharArray()) {
            // Increment frequency count
            freq[c - 'a']++;
            
            // Add the character to the queue
            queue.add(c);
            
            // Check the queue for the first non-repeating character
            while (!queue.isEmpty() && freq[queue.peek() - 'a'] > 1) {
                queue.poll();
            }
            
            // Append the first non-repeating character or '#' to the result
            if (queue.isEmpty()) {
                result.append('#');
            } else {
                result.append(queue.peek());
            }
        }
        
        return result.toString();
    }
}


//========== User's Code Ends Here ==========



public class Main
{
   
    
     public static void main(String[]args)
    {
        Scanner sc=new Scanner(System.in);
        String n =sc.nextLine();
        Solution s = new Solution();
        
        String output = s.solve(n);
        System.out.println(output);
    }
}
