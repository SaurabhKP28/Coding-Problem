Smallest String 3


Company

Wallmart Labs
Amazon
Task details

Problem Statement

Given N and K, find the lexicographically smallest string of length N using only the first K lowercase letters of the alphabet such that each letter is used 
at least once and no two adjacent characters are equal.

If such a string doesn't exist, return -1.

Input

The first line of input contains a single integer, T (1 <= T <= 100).

Then T lines follow, each containing two space-separated integers, N (1 <= N <= 10^5) and K (1 <= K <= 26).

It is guaranteed that sum of N over all test cases does not exceed 10^6

Output

For each test case, output its answer in a new line.

Example

Sample Input:

2

2 3

3 2



Sample Output:

-1

aba 
In the first test case, it's impossible to create a string of length 2 using 3 letters where each letter must be used at least once.
Hence, the output is -1. In the second test case, we can create the string 'aba' using the first 2 letters of the alphabet (a, b) of length 3 
where each letter is used at least once and no two adjacent characters are the same.
Sample Input 2:

1

7 3
Sample Output 2:

abababc
*******************************************************************************************************************************************************************
*******************************************************************************************************************************************************************
Solution
*******************************************************************************************************************************************************************
public class Main {


//========== User's Code Starts Here ==========
static String generateLexicographicallyString(int N, int K) {

    if (N < K) {
        return "-1";
    }

    StringBuilder result = new StringBuilder();

    // Add alternating 'a' and 'b' as long as possible
    for (int i = 0; i < N - (K - 2); i++) {
        result.append((i % 2 == 0) ? 'a' : 'b');
    }

    // Add the rest of the distinct letters from 'c' to the Kth letter
    for (int i = 2; i < K; i++) {
        result.append((char) ('a' + i));
    }

    return result.toString();
}
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int T = scanner.nextInt();

        for (int t = 0; t < T; t++) {
            int N = scanner.nextInt();
            int K = scanner.nextInt();

            String answer = generateLexicographicallyString(N, K);
            System.out.println(answer);
        }
    }
}

