1047. Remove All Adjacent Duplicates In String
Easy

6686
 
265
 
Add to List
 
Share
You are given a string s consisting of lowercase English letters. A duplicate removal consists of choosing two adjacent and equal letters and removing them.

We repeatedly make duplicate removals on s until we no longer can.

Return the final string after all such duplicate removals have been made. It can be proven that the answer is unique.
*********************************************************************************************************************************************************************
*********************************************************************************************************************************************************************
solution
*********************************************************************************************************************************************************************
class Solution {
    public String removeDuplicates(String s) {
         Stack<Character> stack = new Stack<>();
        
        // Traverse the input string
        for (char c : s.toCharArray()) {
            // Check if the stack is not empty and the top element is the same as the current character
            if (!stack.isEmpty() && stack.peek() == c) {
                stack.pop(); // Remove the duplicate
            } else {
                stack.push(c); // Add the character to the stack
            }
        }
        
        // Build the result from the stack
        StringBuilder result = new StringBuilder();
        while (!stack.isEmpty()) {
            result.append(stack.pop());
        }
        
        // Reverse the result to get the correct order
        return result.reverse().toString();
    }
}
